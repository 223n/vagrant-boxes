- name: debian base image
  hosts: all
  become: yes
  gather_facts: yes
  tasks:
    - name: update all packages to the latest version
      apt:
        update_cache: yes
        upgrade: dist
    - name: install linux image
      apt:
        name: linux-image-{{ ansible_kernel.split('-')|last }}
    - name: install linux headers
      apt:
        name: linux-headers-{{ ansible_kernel }}
    - name: add the secure path line
      lineinfile:
        path: /etc/sudoers
        line: "Defaults\tsecure_path=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\""
    - name: adding a 2 sec delay to the interface up, to make the dhclient happy
      lineinfile:
        path: /etc/network/interfaces
        line: "pre-up sleep 2"
    - name: setup password-less sudo for the vagrant user
      copy:
        src: vagrant
        dest: /etc/sudoers.d/vagrant
        mode: 0440
    - name: add vagrant user
      user:
        name: vagrant
        password: "{{ 'vagrant'|password_hash('sha512') }}"
        home: /home/vagrant
    - name: add SSH authorized key
      authorized_key:
        user: vagrant
        key: https://raw.githubusercontent.com/mitchellh/vagrant/master/keys/vagrant.pub
    - name: remove "virtualbox-guest-utils" package
      apt:
        name: virtualbox-guest-utils
        purge: yes
        state: absent
    - name: install "gcc" and "make" package
      apt:
        name: "{{ item }}"
      with_items:
        - gcc
        - make
    - name: cleanup packages
      apt:
        autoremove: yes
    - name: get VirtualBox version
      command: "cat /home/vagrant/.vbox_version"
      register: vbox_version
    - name: check VBoxGuestAdditions iso image
      stat:
        path: /home/vagrant/VBoxGuestAdditions_{{ vbox_version.stdout }}.iso
      register: result
    - name: download VBoxGuestAdditions iso image
      get_url:
        url: http://dlc-cdn.sun.com/virtualbox/{{ vbox_version.stdout }}/VBoxGuestAdditions_{{ vbox_version.stdout }}.iso
        dest: /home/vagrant/VBoxGuestAdditions_{{ vbox_version.stdout }}.iso
      when: not result.stat.exists
    - name: create mount directory
      file:
        path: /tmp/vbox
        state: directory
    - name: mount VBoxGuestAdditions iso image
      mount:
        path: /tmp/vbox
        src: /home/vagrant/VBoxGuestAdditions_{{ vbox_version.stdout }}.iso
        fstype: iso9660
        opts: loop
        state: mounted
    - name: install VBoxGuestAdditions
      command: sh /tmp/vbox/VBoxLinuxAdditions.run
    - name: unmount VBoxGuestAdditions iso image
      mount:
        path: /tmp/vbox
        state: unmounted
    - name: remove iso image
      mount:
        path: /tmp/vbox
        state: absent
    - name: remove mount directory
      file:
        path: /tmp/vbox
        state: absent
    - name: remove VBoxGuestAdditions iso image
      file:
        path: /home/vagrant/VBoxGuestAdditions_{{ vbox_version.stdout }}.iso
        state: absent
    - name: create vagrant shared directory
      file:
        path: /vagrant
        state: directory
    - name: cleanup files
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /dev/.udev
        - /var/lib/dhcp/*
        - /etc/resolv.conf
        - /home/vagrant/VBoxGuestAdditions_*.iso
        - /home/vagrant/VBoxGuestAdditions_*.iso.?
    - name: get remove all Linux header packages
      shell: dpkg --list | awk '{ print $2 }' | grep 'linux-headers'
      ignore_errors: yes
      register: result
    - name: remove all Linux header packages
      apt:
        name: "{{ item }}"
        purge: yes
        state: absent
      with_items: "{{ result.stdout_lines }}"
    - name: get Linux kernel packages(exclude current kernel)
      shell: dpkg --list | awk '{ print $2 }' | grep 'linux-image-[234].*' | grep -v '{{ ansible_kernel.split('-')|last }}'
      ignore_errors: yes
      register: result
    - name: remove Linux kernel packages(keeps the current kernel)
      apt:
        name: "{{ item }}"
        purge: yes
        state: absent
      with_items: "{{ result.stdout_lines }}"
    - name: get Linux source packages
      shell: dpkg --list | awk '{ print $2 }' | grep linux-source
      ignore_errors: yes
      register: result
    - name: remove Linux source packages
      apt:
        name: "{{ item }}"
        purge: yes
        state: absent
      with_items: "{{ result.stdout_lines }}"
    - name: get development packages
      shell: dpkg --list | awk '{ print $2 }' | grep -- '-dev$'
      ignore_errors: yes
      register: result
    - name: remove development packages
      apt:
        name: "{{ item }}"
        purge: yes
        state: absent
      with_items: "{{ result.stdout_lines }}"
    - name: remove X11 libraries
      apt:
        name: "{{ item }}"
        purge: yes
        state: absent
      with_items:
        - libx11-data
        - libxmuu1
        - libxcb1
        - libx11-6
        - libxext6
    - name: remove "gcc" and "make" packages
      apt:
        name: "{{ item }}"
        purge: yes
        state: absent
      with_items:
        - gcc
        - make
    - name: remove other packages
      apt:
        name: "{{ item }}"
        purge: yes
        state: absent
      with_items:
        - zlib1g-dev
        - bluetooth
        - wireless-tools
        - wireless-regdb
        - powertop
        - iw
        - libgcc-4.8-dev
        - libgcc-4.9-dev
        - acpid
    - name: remove unused dependency packages
      apt:
        purge: yes
        autoremove: yes
    - name: remove setting files
      shell: for i in $(dpkg -l | grep ^rc | awk '{print $2}'); do dpkg -P "$i"; done
    - name: erase downloaded archive files
      command: apt-get -y clean
